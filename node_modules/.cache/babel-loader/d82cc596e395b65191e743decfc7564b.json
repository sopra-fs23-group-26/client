{"ast":null,"code":"import _asyncToGenerator from \"/home/heqing/Downloads/SELAB/M3/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"/home/heqing/Downloads/SELAB/M3/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/home/heqing/Downloads/SELAB/M3/client/src/components/views/Register.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport _regeneratorRuntime from \"/home/heqing/Downloads/SELAB/M3/client/node_modules/@babel/runtime/regenerator/index.js\";\nimport React, { useState } from 'react';\nimport { api, handleError } from 'helpers/api';\nimport User from 'models/User';\nimport { useHistory } from 'react-router-dom';\nimport { Button } from 'components/ui/Button';\nimport 'styles/views/Login.scss';\nimport BaseContainer from \"components/ui/BaseContainer\";\nimport PropTypes from \"prop-types\";\n/*\nIt is possible to add multiple components inside a single file,\nhowever be sure not to clutter your files with an endless amount!\nAs a rule of thumb, use one file per component and only add small,\nspecific components that belong to the main one in the same file.\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar FormField = function FormField(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login field\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"login label\",\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"login input\",\n      placeholder: \"enter here to register...\",\n      value: props.value,\n      onChange: function onChange(e) {\n        return props.onChange(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = FormField;\nFormField.propTypes = {\n  label: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func\n};\n\nvar Register = function Register(props) {\n  _s();\n\n  var history = useHistory();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var doRegister = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var requestBody, response, user;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              requestBody = JSON.stringify({\n                username: username,\n                password: password\n              });\n              _context.next = 4;\n              return api.post('/users', requestBody);\n\n            case 4:\n              response = _context.sent;\n\n              if (response.data) {\n                _context.next = 8;\n                break;\n              }\n\n              alert(\"register error, user name: \".concat(username, \" already exists\"));\n              return _context.abrupt(\"return\", false);\n\n            case 8:\n              user = new User(response.data); // Store the token into the local storage.\n\n              localStorage.setItem('token', user.token);\n              localStorage.setItem('userinfo', JSON.stringify(user)); // Login successfully worked --> navigate to the route /game in the GameRouter\n\n              history.push(\"/userlist\");\n              _context.next = 17;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](0);\n              alert(\"Something went wrong during the login: \\n\".concat(handleError(_context.t0)));\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 14]]);\n    }));\n\n    return function doRegister() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(BaseContainer, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login form\",\n        children: [/*#__PURE__*/_jsxDEV(FormField, {\n          label: \"username\",\n          value: username,\n          onChange: function onChange(un) {\n            return setUsername(un);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(FormField, {\n          label: \"password\",\n          value: password,\n          onChange: function onChange(n) {\n            return setPassword(n);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login button-container\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            disabled: !username || !password,\n            width: \"40%\",\n            onClick: function onClick() {\n              return doRegister();\n            },\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Button, {\n            width: \"40%\",\n            onClick: function onClick() {\n              return history.push(\"/login\");\n            },\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, _this);\n};\n/**\n * You can get access to the history object's properties via the withRouter.\n * withRouter will pass updated match, location, and history props to the wrapped component whenever it renders.\n */\n\n\n_s(Register, \"teG+brkwskb3ZUKkcLGrzYo6Xqs=\", false, function () {\n  return [useHistory];\n});\n\n_c2 = Register;\nexport default Register;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FormField\");\n$RefreshReg$(_c2, \"Register\");","map":{"version":3,"sources":["/home/heqing/Downloads/SELAB/M3/client/src/components/views/Register.js"],"names":["React","useState","api","handleError","User","useHistory","Button","BaseContainer","PropTypes","FormField","props","label","value","e","onChange","target","propTypes","string","func","Register","history","username","setUsername","password","setPassword","doRegister","requestBody","JSON","stringify","post","response","data","alert","user","localStorage","setItem","token","push","un","n"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {api, handleError} from 'helpers/api';\nimport User from 'models/User';\nimport {useHistory} from 'react-router-dom';\nimport {Button} from 'components/ui/Button';\nimport 'styles/views/Login.scss';\nimport BaseContainer from \"components/ui/BaseContainer\";\nimport PropTypes from \"prop-types\";\n\n/*\nIt is possible to add multiple components inside a single file,\nhowever be sure not to clutter your files with an endless amount!\nAs a rule of thumb, use one file per component and only add small,\nspecific components that belong to the main one in the same file.\n */\nconst FormField = props => {\n  return (\n    <div className=\"login field\">\n      <label className=\"login label\">\n        {props.label}\n      </label>\n      <input\n        className=\"login input\"\n        placeholder=\"enter here to register...\"\n        value={props.value}\n        onChange={e => props.onChange(e.target.value)}\n      />\n    </div>\n  );\n};\n\nFormField.propTypes = {\n  label: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func\n};\n\nconst Register = props => {\n  const history = useHistory();\n  const [username, setUsername] = useState(null);\n  const [password, setPassword] = useState(null);\n\n  const doRegister = async () => {\n    try {\n      const requestBody = JSON.stringify({username, password});\n      const response = await api.post('/users', requestBody);\n\n      // Get the returned user and update a new object.\n      if(!response.data){\n        alert(`register error, user name: ${username} already exists`)\n        return false;\n      }\n      const user = new User(response.data);\n\n      // Store the token into the local storage.\n      localStorage.setItem('token', user.token);\n      localStorage.setItem('userinfo', JSON.stringify(user));\n      // Login successfully worked --> navigate to the route /game in the GameRouter\n      history.push(`/userlist`);\n    } catch (error) {\n      alert(`Something went wrong during the login: \\n${handleError(error)}`);\n    }\n  };\n\n  return (\n    <BaseContainer>\n      <div className=\"login container\">\n        <h2>Register</h2>\n        <div className=\"login form\">\n          <FormField\n            label=\"username\"\n            value={username}\n            onChange={un => setUsername(un)}\n          />\n          <FormField\n            label=\"password\"\n            value={password}\n            onChange={n => setPassword(n)}\n          />\n          <div className=\"login button-container\">\n            <Button\n              disabled={!username || !password}\n              width=\"40%\"\n              onClick={() => doRegister()}\n            >\n              Register\n            </Button>\n            <Button\n              width=\"40%\"\n              onClick={() => history.push(`/login`)}\n            >\n              Login\n            </Button>\n          </div>\n        </div>\n      </div>\n    </BaseContainer>\n  );\n};\n\n/**\n * You can get access to the history object's properties via the withRouter.\n * withRouter will pass updated match, location, and history props to the wrapped component whenever it renders.\n */\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}