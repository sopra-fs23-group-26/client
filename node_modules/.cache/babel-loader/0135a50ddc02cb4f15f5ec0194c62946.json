{"ast":null,"code":"var _jsxFileName = \"/home/heqing/Downloads/SELAB/M3/client/src/components/routing/routeProtectors/ResetPasswordGuard.js\",\n    _this = this;\n\nimport { Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n/**\n *\n * Another way to export directly your functional component.\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var ResetPasswordGuard = function ResetPasswordGuard(props) {\n  if (!localStorage.getItem(\"token\")) {\n    return props.children;\n  } // if user is already logged in, redirects to the main /app\n\n\n  return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 10\n  }, _this);\n};\n_c = ResetPasswordGuard;\nResetPasswordGuard.propTypes = {\n  children: PropTypes.node\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPasswordGuard\");","map":{"version":3,"sources":["/home/heqing/Downloads/SELAB/M3/client/src/components/routing/routeProtectors/ResetPasswordGuard.js"],"names":["Redirect","PropTypes","ResetPasswordGuard","props","localStorage","getItem","children","propTypes","node"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,kBAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA;AACA;AACA;AACA;;;AACA,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,KAAK,EAAI;AACzC,MAAI,CAACC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAL,EAAoC;AAClC,WAAOF,KAAK,CAACG,QAAb;AACD,GAHwC,CAIzC;;;AACA,sBAAO,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CANM;KAAMJ,kB;AAQbA,kBAAkB,CAACK,SAAnB,GAA+B;AAC7BD,EAAAA,QAAQ,EAAEL,SAAS,CAACO;AADS,CAA/B","sourcesContent":["import {Redirect} from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\n/**\n *\n * Another way to export directly your functional component.\n */\nexport const ResetPasswordGuard = props => {\n  if (!localStorage.getItem(\"token\")) {\n    return props.children;\n  }\n  // if user is already logged in, redirects to the main /app\n  return <Redirect to=\"/\"/>;\n};\n\nResetPasswordGuard.propTypes = {\n  children: PropTypes.node\n}"]},"metadata":{},"sourceType":"module"}