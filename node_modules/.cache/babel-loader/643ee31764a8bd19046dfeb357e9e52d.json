{"ast":null,"code":"var _jsxFileName = \"/home/heqing/Downloads/SELAB/M3/client/src/components/routing/routeProtectors/ProfileGuard.js\",\n    _this = this;\n\nimport { Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n/**\n * routeProtectors interfaces can tell the router whether or not it should allow navigation to a requested route.\n * They are functional components. Based on the props passed, a route gets rendered.\n * In this case, if the user is authenticated (i.e., a token is stored in the local storage)\n * {props.children} are rendered --> The content inside the <ProfileGuard> in the App.js file, i.e. the user is able to access the main app.\n * If the user isn't authenticated, the components redirects to the /login screen\n * @Guard\n * @param props\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var ProfileGuard = function ProfileGuard(props) {\n  if (localStorage.getItem(\"token\")) {\n    return props.children;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/register\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 10\n  }, _this);\n};\n_c = ProfileGuard;\nProfileGuard.propTypes = {\n  children: PropTypes.node\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileGuard\");","map":{"version":3,"sources":["/home/heqing/Downloads/SELAB/M3/client/src/components/routing/routeProtectors/ProfileGuard.js"],"names":["Redirect","PropTypes","ProfileGuard","props","localStorage","getItem","children","propTypes","node"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,kBAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK,EAAI;AACnC,MAAIC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAJ,EAAmC;AACjC,WAAOF,KAAK,CAACG,QAAb;AACD;;AACD,sBAAO,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CALM;KAAMJ,Y;AAObA,YAAY,CAACK,SAAb,GAAyB;AACvBD,EAAAA,QAAQ,EAAEL,SAAS,CAACO;AADG,CAAzB","sourcesContent":["import {Redirect} from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\n/**\n * routeProtectors interfaces can tell the router whether or not it should allow navigation to a requested route.\n * They are functional components. Based on the props passed, a route gets rendered.\n * In this case, if the user is authenticated (i.e., a token is stored in the local storage)\n * {props.children} are rendered --> The content inside the <ProfileGuard> in the App.js file, i.e. the user is able to access the main app.\n * If the user isn't authenticated, the components redirects to the /login screen\n * @Guard\n * @param props\n */\nexport const ProfileGuard = props => {\n  if (localStorage.getItem(\"token\")) {\n    return props.children;\n  }\n  return <Redirect to=\"/register\"/>;\n};\n\nProfileGuard.propTypes = {\n  children: PropTypes.node\n};"]},"metadata":{},"sourceType":"module"}