{"ast":null,"code":"import _asyncToGenerator from \"/home/heqing/Downloads/SELAB/M3/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"/home/heqing/Downloads/SELAB/M3/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/home/heqing/Downloads/SELAB/M3/client/src/components/views/Platform.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport _regeneratorRuntime from \"/home/heqing/Downloads/SELAB/M3/client/node_modules/@babel/runtime/regenerator/index.js\";\nimport { useEffect, useState } from 'react';\nimport { api, handleError } from 'helpers/api';\nimport { Spinner } from 'components/ui/Spinner';\nimport { Button } from 'components/ui/Button';\nimport { useHistory } from 'react-router-dom';\nimport BaseContainer from \"components/ui/BaseContainer\";\nimport PropTypes from \"prop-types\";\nimport \"styles/views/Game.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nPlayer.propTypes = {\n  user: PropTypes.object\n};\n\nvar Platform = function Platform() {\n  _s();\n\n  // use react-router-dom's hook to access the history\n  var history = useHistory(); // define a state variable (using the state hook).\n  // if this variable changes, the component will re-render, but the variable will\n  // keep its value throughout render cycles.\n  // a component can have as many state variables as you like.\n  // more information can be found under https://reactjs.org/docs/hooks-state.html\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var logout = function logout() {\n    var userinfo = JSON.parse(localStorage.getItem('userinfo'));\n    api.post('/logout/' + userinfo.username);\n    localStorage.removeItem('token');\n    history.push('/');\n  };\n\n  var gotoProfile = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var userinfo, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              userinfo = JSON.parse(localStorage.getItem('userinfo'));\n              _context.next = 4;\n              return api.get('/user/' + userinfo.username);\n\n            case 4:\n              response = _context.sent;\n              _context.next = 7;\n              return new Promise(function (resolve) {\n                return setTimeout(resolve, 500);\n              });\n\n            case 7:\n              setUser(response.data);\n              history.push(\"/profile?username=\".concat(user.username));\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](0);\n              history.push('/');\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 11]]);\n    }));\n\n    return function gotoProfile() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(BaseContainer, {\n    className: \"game container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Game Platform\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(Button, {\n      width: \"100%\",\n      onClick: function onClick() {\n        return gotoProfile();\n      },\n      children: \"Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(Button, {\n      width: \"100%\",\n      onClick: function onClick() {\n        return logout();\n      },\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Platform, \"m7ZE1S6lfGWQVWn+/ui1tbXbqwI=\", false, function () {\n  return [useHistory];\n});\n\n_c = Platform;\nexport default Platform;\n\nvar _c;\n\n$RefreshReg$(_c, \"Platform\");","map":{"version":3,"sources":["/home/heqing/Downloads/SELAB/M3/client/src/components/views/Platform.js"],"names":["useEffect","useState","api","handleError","Spinner","Button","useHistory","BaseContainer","PropTypes","Player","propTypes","user","object","Platform","history","setUser","logout","userinfo","JSON","parse","localStorage","getItem","post","username","removeItem","push","gotoProfile","get","response","Promise","resolve","setTimeout","data"],"mappings":";;;;;;;;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,SAAQC,GAAR,EAAaC,WAAb,QAA+B,aAA/B;AACA,SAAQC,OAAR,QAAsB,uBAAtB;AACA,SAAQC,MAAR,QAAqB,sBAArB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,wBAAP;;AAEAC,MAAM,CAACC,SAAP,GAAmB;AACjBC,EAAAA,IAAI,EAAEH,SAAS,CAACI;AADC,CAAnB;;AAIA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA;;AACrB;AACA,MAAMC,OAAO,GAAGR,UAAU,EAA1B,CAFqB,CAIrB;AACA;AACA;AACA;AACA;;AACA,kBAAwBL,QAAQ,CAAC,IAAD,CAAhC;AAAA;AAAA,MAAOU,IAAP;AAAA,MAAaI,OAAb;;AAEA,MAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACnB,QAAIC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAf;AACAnB,IAAAA,GAAG,CAACoB,IAAJ,CAAS,aAAaL,QAAQ,CAACM,QAA/B;AACAH,IAAAA,YAAY,CAACI,UAAb,CAAwB,OAAxB;AACAV,IAAAA,OAAO,CAACW,IAAR,CAAa,GAAb;AACD,GALD;;AAOA,MAAMC,WAAW;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEVT,cAAAA,QAFU,GAECC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAFD;AAAA;AAAA,qBAGOnB,GAAG,CAACyB,GAAJ,CAAQ,WAAWV,QAAQ,CAACM,QAA5B,CAHP;;AAAA;AAGVK,cAAAA,QAHU;AAAA;AAAA,qBAIV,IAAIC,OAAJ,CAAY,UAAAC,OAAO;AAAA,uBAAIC,UAAU,CAACD,OAAD,EAAU,GAAV,CAAd;AAAA,eAAnB,CAJU;;AAAA;AAKhBf,cAAAA,OAAO,CAACa,QAAQ,CAACI,IAAV,CAAP;AACAlB,cAAAA,OAAO,CAACW,IAAR,6BAAkCd,IAAI,CAACY,QAAvC;AANgB;AAAA;;AAAA;AAAA;AAAA;AAQhBT,cAAAA,OAAO,CAACW,IAAR,CAAa,GAAb;;AARgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAXC,WAAW;AAAA;AAAA;AAAA,KAAjB;;AAaA,sBACE,QAAC,aAAD;AAAe,IAAA,SAAS,EAAC,gBAAzB;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI,QAAC,MAAD;AACE,MAAA,KAAK,EAAC,MADR;AAEE,MAAA,OAAO,EAAE;AAAA,eAAMA,WAAW,EAAjB;AAAA,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFJ,eASI,QAAC,MAAD;AACE,MAAA,KAAK,EAAC,MADR;AAEE,MAAA,OAAO,EAAE;AAAA,eAAMV,MAAM,EAAZ;AAAA,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aATJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAkBD,CAjDD;;GAAMH,Q;UAEYP,U;;;KAFZO,Q;AAmDN,eAAeA,QAAf","sourcesContent":["import {useEffect, useState} from 'react';\nimport {api, handleError} from 'helpers/api';\nimport {Spinner} from 'components/ui/Spinner';\nimport {Button} from 'components/ui/Button';\nimport {useHistory} from 'react-router-dom';\nimport BaseContainer from \"components/ui/BaseContainer\";\nimport PropTypes from \"prop-types\";\nimport \"styles/views/Game.scss\";\n\nPlayer.propTypes = {\n  user: PropTypes.object\n};\n\nconst Platform = () => {\n  // use react-router-dom's hook to access the history\n  const history = useHistory();\n\n  // define a state variable (using the state hook).\n  // if this variable changes, the component will re-render, but the variable will\n  // keep its value throughout render cycles.\n  // a component can have as many state variables as you like.\n  // more information can be found under https://reactjs.org/docs/hooks-state.html\n  const [user, setUser] = useState(null);\n\n  const logout = () => {\n    let userinfo = JSON.parse(localStorage.getItem('userinfo'))\n    api.post('/logout/' + userinfo.username);\n    localStorage.removeItem('token');\n    history.push('/');\n  }\n\n  const gotoProfile = async () => {\n    try {\n      const userinfo = JSON.parse(localStorage.getItem('userinfo'))\n      const response = await api.get('/user/' + userinfo.username);\n      await new Promise(resolve => setTimeout(resolve, 500));\n      setUser(response.data);\n      history.push(`/profile?username=${user.username}`);\n    } catch (error) {\n      history.push('/');\n    }\n  }\n\n\n  return (\n    <BaseContainer className=\"game container\">\n        <h2>Game Platform</h2>\n        <Button\n          width=\"100%\"\n          onClick={() => gotoProfile()}\n        >\n          Profile\n        </Button>\n\n        <Button\n          width=\"100%\"\n          onClick={() => logout()}\n        >\n          Logout\n        </Button>\n    </BaseContainer>\n  );\n}\n\nexport default Platform;\n"]},"metadata":{},"sourceType":"module"}