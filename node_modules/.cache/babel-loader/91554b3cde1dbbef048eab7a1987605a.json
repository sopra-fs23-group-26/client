{"ast":null,"code":"import _asyncToGenerator from \"/home/heqing/Downloads/SELAB/M3/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"/home/heqing/Downloads/SELAB/M3/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/home/heqing/Downloads/SELAB/M3/client/src/components/views/ResetPassword.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport _regeneratorRuntime from \"/home/heqing/Downloads/SELAB/M3/client/node_modules/@babel/runtime/regenerator/index.js\";\nimport React, { useState } from 'react';\nimport { api, handleError } from 'helpers/api';\nimport User from 'models/User';\nimport { useHistory } from 'react-router-dom';\nimport { Button } from 'components/ui/Button';\nimport 'styles/views/Register.scss';\nimport BaseContainer from \"components/ui/BaseContainer\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar FormField = function FormField(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register field\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"register label\",\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"register input\",\n      placeholder: props.placeholder,\n      value: props.value,\n      type: props.type,\n      onChange: function onChange(e) {\n        return props.onChange(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = FormField;\nFormField.propTypes = {\n  label: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  placeholder: PropTypes.string,\n  type: PropTypes.string.isRequired\n};\n\nvar ResetPassword = function ResetPassword(props) {\n  _s();\n\n  var history = useHistory();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      username = _useState4[0],\n      setUsername = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      originalPassword = _useState6[0],\n      setOriginalPassword = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      newPassword = _useState8[0],\n      setNewPassword = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      repeatNewPassword = _useState10[0],\n      setRepeatNewPassword = _useState10[1];\n\n  var doResetPassword = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var requestBody, response, user;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              requestBody = JSON.stringify({\n                email: email,\n                username: username,\n                originalPassword: originalPassword,\n                newPassword: newPassword,\n                repeatNewPassword: repeatNewPassword\n              });\n              _context.next = 4;\n              return api.post('/users/resetpassword', requestBody);\n\n            case 4:\n              response = _context.sent;\n\n              if (response.data) {\n                _context.next = 8;\n                break;\n              }\n\n              alert(\"reset password error\");\n              return _context.abrupt(\"return\", false);\n\n            case 8:\n              user = new User(response.data);\n              localStorage.setItem('token', user.token);\n              localStorage.setItem('userinfo', JSON.stringify(user));\n              history.push(\"/\");\n              _context.next = 17;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](0);\n              alert(\"Something went wrong during resetting password: \\n\".concat(handleError(_context.t0)));\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 14]]);\n    }));\n\n    return function doResetPassword() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(BaseContainer, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"register title\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register form\",\n        children: [/*#__PURE__*/_jsxDEV(FormField, {\n          value: email,\n          onChange: function onChange(un) {\n            return setEmail(un);\n          },\n          placeholder: \"Email\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(FormField, {\n          value: username,\n          onChange: function onChange(un) {\n            return setUsername(un);\n          },\n          placeholder: \"Username\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(FormField, {\n          value: originalPassword,\n          onChange: function onChange(n) {\n            return setOriginalPassword(n);\n          },\n          placeholder: \"Original Password\",\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(FormField, {\n          value: newPassword,\n          onChange: function onChange(un) {\n            return setNewPassword(un);\n          },\n          placeholder: \"New Password\",\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(FormField, {\n          value: repeatNewPassword,\n          onChange: function onChange(un) {\n            return setRepeatNewPassword(un);\n          },\n          placeholder: \"Repeat New Password\",\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"register button-container\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            disabled: !email || !username || !originalPassword || !newPassword || !repeatNewPassword,\n            width: \"100%\",\n            onClick: function onClick() {\n              return history.push('/');\n            },\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, _this);\n};\n/**\n * You can get access to the history object's properties via the withRouter.\n * withRouter will pass updated match, location, and history props to the wrapped component whenever it renders.\n */\n\n\n_s(ResetPassword, \"+5NOk/P7NtksSnTOk0ZF5mQaYjs=\", false, function () {\n  return [useHistory];\n});\n\n_c2 = ResetPassword;\nexport default ResetPassword;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FormField\");\n$RefreshReg$(_c2, \"ResetPassword\");","map":{"version":3,"sources":["/home/heqing/Downloads/SELAB/M3/client/src/components/views/ResetPassword.js"],"names":["React","useState","api","handleError","User","useHistory","Button","BaseContainer","PropTypes","FormField","props","label","placeholder","value","type","e","onChange","target","propTypes","string","func","isRequired","ResetPassword","history","email","setEmail","username","setUsername","originalPassword","setOriginalPassword","newPassword","setNewPassword","repeatNewPassword","setRepeatNewPassword","doResetPassword","requestBody","JSON","stringify","post","response","data","alert","user","localStorage","setItem","token","push","un","n"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {api, handleError} from 'helpers/api';\nimport User from 'models/User';\nimport {useHistory} from 'react-router-dom';\nimport {Button} from 'components/ui/Button';\nimport 'styles/views/Register.scss';\nimport BaseContainer from \"components/ui/BaseContainer\";\nimport PropTypes from \"prop-types\";\n\nconst FormField = props => {\n  return (\n    <div className=\"register field\">\n      <label className=\"register label\">\n        {props.label}\n      </label>\n      <input\n        className=\"register input\"\n        placeholder={props.placeholder}\n        value={props.value}\n        type={props.type}\n        onChange={e => props.onChange(e.target.value)}\n      />\n    </div>\n  );\n};\n\nFormField.propTypes = {\n  label: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  placeholder: PropTypes.string,\n  type: PropTypes.string.isRequired\n};\n\nconst ResetPassword = props => {\n  const history = useHistory();\n  const [email, setEmail] = useState(null);\n  const [username, setUsername] = useState(null);\n  const [originalPassword, setOriginalPassword] = useState(null);\n  const [newPassword, setNewPassword] = useState(null);\n  const [repeatNewPassword, setRepeatNewPassword] = useState(null);\n\n\n  const doResetPassword = async () => {\n    try {\n      const requestBody = JSON.stringify({email, username, originalPassword, newPassword, repeatNewPassword});\n      const response = await api.post('/users/resetpassword', requestBody);\n\n      // heqing: there is another case: the password and repeatPassword are not equal\n      if(!response.data){\n        alert(`reset password error`)\n        return false;\n      }\n      const user = new User(response.data);\n\n      localStorage.setItem('token', user.token);\n      localStorage.setItem('userinfo', JSON.stringify(user));\n      history.push(`/`);\n    } catch (error) {\n      alert(`Something went wrong during resetting password: \\n${handleError(error)}`);\n    }\n  };\n\n  return (\n    <BaseContainer>\n      <div className=\"register container\">\n      <h1 className=\"register title\">Reset Password</h1>\n        <div className=\"register form\">\n          <FormField\n            value={email}\n            onChange={un => setEmail(un)}\n            placeholder=\"Email\"\n            type=\"text\"\n            />\n          <FormField\n            value={username}\n            onChange={un => setUsername(un)}\n            placeholder=\"Username\"\n            type=\"text\"\n          />\n          <FormField\n            value={originalPassword}\n            onChange={n => setOriginalPassword(n)}\n            placeholder=\"Original Password\"\n            type=\"password\"\n          />\n          <FormField\n            value={newPassword}\n            onChange={un => setNewPassword(un)}\n            placeholder=\"New Password\"\n            type=\"password\"\n          />\n          <FormField\n            value={repeatNewPassword}\n            onChange={un => setRepeatNewPassword(un)}\n            placeholder=\"Repeat New Password\"\n            type=\"password\"\n          />\n          <div className=\"register button-container\">\n            <Button\n              disabled={!email || !username || !originalPassword || !newPassword || !repeatNewPassword}\n              width=\"100%\"\n              onClick={() => history.push('/')}\n            >\n              Submit\n            </Button>\n          </div>\n        </div>\n      </div>\n    </BaseContainer>\n  );\n};\n\n/**\n * You can get access to the history object's properties via the withRouter.\n * withRouter will pass updated match, location, and history props to the wrapped component whenever it renders.\n */\nexport default ResetPassword;"]},"metadata":{},"sourceType":"module"}